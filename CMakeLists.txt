cmake_minimum_required(VERSION 3.0.0)
project(mal VERSION 0.1.0)

include(CTest)
# add_executable(test_table src/test_table.c src/chunk.c src/memory.c src/debug.c src/value.c src/vm.c src/compiler.c src/scanner.c src/object.c src/table.c src/native/console.c)
enable_testing()
# add_test(NAME test_table COMMAND test_table)
add_test(NAME variables COMMAND python ../test_runner.py "mal.exe" "../tst/variable.mal" "//expect:")
add_test(NAME scope COMMAND python ../test_runner.py "mal.exe" "../tst/scope.mal" "//expect:")
add_test(NAME if COMMAND python ../test_runner.py "mal.exe" "../tst/if.mal" "//expect:")
add_test(NAME while COMMAND python ../test_runner.py "mal.exe" "../tst/while.mal" "//expect:")
add_test(NAME loop COMMAND python ../test_runner.py "mal.exe" "../tst/loop.mal" "//expect:")
add_test(NAME functions COMMAND python ../test_runner.py "mal.exe" "../tst/functions.mal" "//expect:")
add_test(NAME closures COMMAND python ../test_runner.py "mal.exe" "../tst/closures.mal" "//expect:")
add_test(NAME strings COMMAND python ../test_runner.py "mal.exe" "../tst/strings.mal" "//expect:")
add_test(NAME lists COMMAND python ../test_runner.py "mal.exe" "../tst/lists.mal" "//expect:")
add_test(NAME boundscheck COMMAND python ../test_runner.py "mal.exe" "../tst/boundscheck.mal" "//expect:" -e)
add_test(NAME slice COMMAND python ../test_runner.py "mal.exe" "../tst/slice.mal" "//expect:")
add_test(NAME for COMMAND python ../test_runner.py "mal.exe" "../tst/for.mal" "//expect:")
add_test(NAME range COMMAND python ../test_runner.py "mal.exe" "../tst/range.mal" "//expect:")
add_test(NAME subscript COMMAND python ../test_runner.py "mal.exe" "../tst/subscript.mal" "//expect:")

add_executable(mal src/main.c src/chunk.c src/memory.c src/debug.c src/value.c src/vm.c src/compiler.c src/scanner.c src/object.c src/table.c src/native/console.c src/native/list.c src/native/filesys.c)

set(CPACK_PROJECT_NAME ${PROJECT_NAME})
set(CPACK_PROJECT_VERSION ${PROJECT_VERSION})
include(CPack)
