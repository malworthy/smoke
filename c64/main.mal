#inc scanner.mal
#inc compiler.mal
#inc vm.mal



fn list(program)
{
    if program == nil then return

    for line in program print string.trim(line)
}

fn repl()
{
    var vm = Vm()

    clear()
    print "COMMODORE 64 BASIC V2 (c) Retro Software 2022"
    print "Version 0.01"
    print ""
    print "READY."
    var program = []
    while true do
    {
        const line = input()
        
        if line != "" and line[0] >= "0" and line[0] <= "9" then
        {
            vm.addToProgram(line)
        }
        else if line == "run" then
        {
            vm.interprete(false)
            print "READY."
        }
        else if line == "debug" then
        {
            vm.interprete(true)
            print "READY."
        }
        else if line == "list" then
        {
            list(vm.loadedProgram)
        }
        else if string.upper(line) == "NEW"
        {
            vm = Vm()
        }
        else if line != ""
        {
            vm.runDirect([line])
            print "READY."
        }
        
    }
}

if len(args()) > 1
{   
    const vm = Vm()
    const program = ["load \"%{args()[1]}\""]
    const result = vm.runDirect(program)
    
    if result then
        vm.interprete(false)
}
else
{
    repl()
}


