class Paddle
{
    init()
    {
        me.x = 1
        me.y = 1
        me.hits = 0
    }

    draw()
    {
        con.backcolor("green")
        for row in [0..4]
        {
            con.locate(me.x, me.y + row);
            con.write(" ")
        }
        con.backcolor("reset")
    }

    moveDown()
    {
        con.locate(me.x, me.y)
        con.write(" ")
        me.y++
        me.draw()
    }

    moveUp()
    {
        con.locate(me.x, me.y+4)
        con.write(" ")
        me.y--
        me.draw()
    }
}

class Ball
{
    init()
    {
        me.x = 10
        me.y = 10
        me.xv = 0.2 + rand(10) / 30
        me.yv = 0.1 + rand(10) / 40
    }

    move(paddle)
    {
        con.locate(me.x, me.y)
        con.write(" ");
        me.x = me.x + me.xv
        me.y = me.y + me.yv
        if me.x <= 2 then
        {
            if me.y >= paddle.y and me.y <= paddle.y + 5 then
            {
                me.xv = -me.xv
                me.x += me.xv
                paddle.draw()
                paddle.hits++

                if me.xv > 0 then 
                    me.xv += rand(10) / 40 
                else 
                    me.xv += -(rand(10) / 40)
            }
            else
            {
                return false
            }
        }
        if me.x > 80 then 
        {
            me.xv = -me.xv
            me.x += me.xv
        }
        if me.y > 30 or me.y < 1 then
        {
            me.yv = -me.yv
            me.y += me.yv
        }
        con.backcolor("red")
        con.locate(me.x,me.y)
        con.write(" ")
        con.backcolor("reset")

        return true        
    }
}

fn game()
{
    var paddle = Paddle()
    var ball = Ball()
    paddle.draw()
    while true do
    {
        var key = con.getch()
        con.locate(10,1)
        con.write("Hits: %{paddle.hits}")
        if key == Keys.w then paddle.moveUp()
        if key == Keys.s then paddle.moveDown()
        if key == Keys.q then return 0
        if !ball.move(paddle) then return paddle.hits
        sleep(20)
    }
}

con.clear()
con.cursoff(true)
con.write(" ")
const result = game()
con.cursoff(false)
con.clear()
print "Game Over. Hits = %{result}"

