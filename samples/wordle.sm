fn get_words(filename)
{
    return file.readlines(filename)
}

fn random_number(max)
{
    return rand(max)
}

fn find_all(str, ch)
{
    var result = []
    var i = 0
    for letter in str
    {
        if letter == ch then result << i
        i++
    }
    return result
}

fn in_list(list, item)
{
    for i in list
    {
        if i == item then return true
    }
    return false
}

fn game()
{
    const words = get_words("valid-wordle-words.txt")
    //const allowed_words = get_words("five_letter_words.txt")
    const word = words[random_number(len(words)-1)]
    var notused = ""
    for r in [1..6]
    {
        con.write("Enter Guess %{r}: ")
        var guess = con.input()
        while !in_list(words, guess) do
        {
            print "Word not in dictionary.  Try again"
            con.write("Enter Guess %{r}: ")
            guess = con.input()
        }
        var used_letters = ""
        con.textcolor("black")
        for i in [0..4]
        {
            var found_indexes = find_all(word, guess[i])
            if in_list(found_indexes,i) then
            {
                con.backcolor("green")
                con.write(guess[i])
                used_letters = used_letters + guess[i]
            }
            else if len(found_indexes) > 0 and len(find_all(used_letters,guess[i])) < len(found_indexes) then
            {
                con.backcolor("yellow")
                con.write(guess[i])
                used_letters = used_letters + guess[i]
            }
            else
            {
                con.backcolor("gray")
                con.write(guess[i])
                if !in_list(notused, guess[i]) then notused = notused + guess[i]
            }
        }
        con.textcolor("reset")
        con.backcolor("reset")
        print ""
        if guess == word then
        {
            print "You got it in %{r} guesses"
            return
        }
        if notused != "" then print "Letters not in word: %{notused}"
    }

    print "The word was %{word}"
}

game()
